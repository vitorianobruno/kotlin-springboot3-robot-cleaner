name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: vitorianobruno/robot-cleaner

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run unit tests
        run: mvn test
        working-directory: robot-cleaner

  build:
    name: Build and Test Docker Image
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build application
        run: mvn clean package -DskipTests
        working-directory: robot-cleaner

      - name: Build Docker image
        run: docker build -t robot-cleaner:latest robot-cleaner

      - name: Test Docker image
        run: |
          docker run -d --name test-app -p 8080:8080 robot-cleaner:latest
          sleep 20
          echo "=== Logs de la aplicaci√≥n ==="
          docker logs test-app
          echo "=== Probando endpoint de salud ==="
          curl -f http://localhost:8080/actuator/health || echo "Health check no disponible"
          echo "=== Probando API principal ==="
          curl -X POST http://localhost:8080/api/simulate \
            -H "Content-Type: text/plain" \
            -d "5 5
          1 2 N
          LMLMLMLMM
          3 3 E
          MMRMMRMRRM" && echo "‚úÖ API funcionando correctamente" || echo "‚ö†Ô∏è API no respondi√≥"
          docker stop test-app
          docker rm test-app

  push-to-registry:
    name: Push to GitHub Container Registry
    needs: build
    runs-on: ubuntu-latest
    # Solo hacer push en pushes a main/develop, no en PRs
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build application
        run: mvn clean package -DskipTests
        working-directory: robot-cleaner

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image for registry
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest robot-cleaner
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} robot-cleaner

      - name: Push Docker images
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Verify pushed images
        run: |
          echo "‚úÖ Im√°genes publicadas:"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo ""
          echo "üì¶ Para usar la imagen:"
          echo "  docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "  docker run -p 8080:8080 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"